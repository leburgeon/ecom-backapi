- Integrating the cloudfront cdn:
  - Create the fe page for creating a new order 
    - User must be admin authenticated to view to product adding page
    - Must include: all the fields for the product including name and description.
  - Create the route for adding a new product
    - Handle adding the product images to the bucket
    - Save the product document to mongoDB with the image url

TODOS:

- Implement the soft reservation system
  - Warning for low stock items, and message that stock will be reserved for x minutes
  - Decide: How to manage stock reservations for multiple items?
  - Updated route for adding to basket, that creates reservations when ls
  - Background tasks for removing reservations
  - Web sockets for notifying users that an item in their basket is out of stock
 

Later
- Add support for multiple images
- Add database sharding for category
- Add an index for user of orders
- Add an index for user id of baskets
- Implememt refresh tokens so that frontend requests a fresh access token if expired.
   - somehow do this without user knowledge
- Implement routine that cleans up expired tempOrders that have not been handled correctly
- Change stock reservation cleanup to non-atomic using bulkwrite. 
 - Reservation updates that throw error are passed to task queue to be dealt with instead of whole op failing
- Add indexing to orderNumber, as generateOrderNumber() searches for documents in this field on each createOrder
  

